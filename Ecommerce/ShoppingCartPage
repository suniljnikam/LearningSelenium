package pageFactory;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import Utility.Util;

public class ShoppingCartPage {
	
	WebDriver driver;
	
	@FindBy(xpath="//*[@id='shopping-cart-table']/tbody/tr/td[4]/input")
	WebElement quantityTxtBox;
	
	@FindBy(xpath="//*[@id='shopping-cart-table']/tbody/tr/td[4]/button")
	WebElement updateQuantityBtn;
	
	@FindBy(xpath="//*[@class='button2 btn-empty']/span/span")
	WebElement emptyCartLink;
		
	@FindBy(xpath="//p[@class='item-msg error']")
	WebElement requestedQuantityErrorMessage;
	
	@FindBy(xpath="//*[@id='top']/body/div/div/div[2]/div/div/div[1]/h1")
	WebElement emptyCartErrorMessage;
	
	public ShoppingCartPage(WebDriver driver)
	{
		this.driver=driver;
		PageFactory.initElements(driver, this);
	}
	
	public void setQuanity(int number)
	{
		// converting number to character as send keys only accept characters / strings
		quantityTxtBox.sendKeys(String.valueOf(number));
		System.out.println("Quanity"+quantityTxtBox.getAttribute("value")+"Set now");
	}
	public void updateQuantity()
	{		
		//Util.waitForVisibility(updateQuantityBtn);
		updateQuantityBtn.click();
	}
	
	public String getErrorMessageForQuantity()
	{
		return requestedQuantityErrorMessage.getText();
	}
	
	public void clickOnEmptyCart() throws InterruptedException
	{
		emptyCartLink.click();		
		
	}
	
	public String getErrorMessageForEmptyCart()
	{
		return emptyCartErrorMessage.getText();
	}
	
	public void verifyErrorMessageForQuantity()
	{
		String actualMessage = getErrorMessageForQuantity();
				
		Util.assertion.assertTrue(actualMessage.equalsIgnoreCase(Util.updateQuantityErrorMessage),"Expected Message for quantity is different than actual");
	}
	
	public void verifyErrorMessageForEmptyCart()
	{
		
		String actualMessage = getErrorMessageForEmptyCart();
				
		Util.assertion.assertTrue(actualMessage.equalsIgnoreCase(Util.emptyCartErrorMessage), "Expected Empty cart message is different than actual");
		Util.assertion.assertAll();
		
	}
}

