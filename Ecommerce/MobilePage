package pageFactory;
import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.Select;

import junit.framework.Assert;

public class MobilePage {
	
	WebDriver driver;
	
	// find out of web elements that you need from this web page
	
	@FindBy(xpath="//*[@id='top']/body/div/div/div[2]/div/div[2]/div[1]/div[3]/div[1]/div[1]/div/select")
	WebElement sortByDrpDwn;
	
	// calling constructor of page
	
	public MobilePage(WebDriver driver)
	{
		this.driver=driver;
		PageFactory.initElements(driver, this);
	}
	
	// writing functions
	
	public void sortByName(WebDriver driver)
	{
		Select drpDwn = new Select(sortByDrpDwn);
		drpDwn.selectByVisibleText("Name");
	}
	
	public void takeScreenshot(WebDriver driver) throws IOException
	{
		File f = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		FileUtils.copyFile(f,new File("P:\\Documents\\MyActualDocuments\\Selenium\\Evidences\\EcommerceMobilePage.jpg"));
	}
	public String[] retrieveProductNames(WebDriver driver)
	{
		// getting list of all products name
		List<WebElement> list = driver.findElements(By.xpath("//h2[@class='product-name']/a"));
		String[] productName=new String[3];
		int i=0;
		
		// traveling through list to get text 
		
	    for(WebElement el : list) {
	    	productName [i]=el.getText();	    	
	    	
	    	System.out.println(" Product Name is "+productName[i]);
	    	i++;
	    }
		return productName;
	    
	}
	
	public void verifySorting(String array1[], String array2[])
	{		
		Assert.assertTrue("sorting Test Case failed as Products haven't sorted Properly", Arrays.equals(array1, array2));
	}
}
